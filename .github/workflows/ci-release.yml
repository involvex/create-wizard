# @format

name: CI/CD Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-build
          path: dist/

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - run: npm test

  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # Only run on main branch
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required for versioning

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Bump version, generate changelog, and push tag
        run: |
          npm version patch -m "chore(release): %s"
          conventional-changelog -p angular -i CHANGELOG.md -s
          export NEW_VERSION=$(node -p "require('./package.json').version")
          echo "---title: Version ${NEW_VERSION} Release\nauthors: [involvex]\ntags: [release]\n---" > docs/changelog/v${NEW_VERSION}.md
          conventional-changelog -p angular -r 1 >> docs/changelog/v${NEW_VERSION}.md
          git add CHANGELOG.md docs/changelog/
          git commit --amend --no-edit
          git push --follow-tags

  publish:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') # Only run on version tags
    needs: test
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org/'

      - name: Install dependencies
        run: npm install

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-build
          path: dist/

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}